# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle
name: Staging

on:
  push:
    branches: [ master ]
  pull_request:
    types: [ opened ]
    branches: [ master ]

jobs:
  Integration:
    name: Build & Integration(Dev)
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build JAR
      run: |
        gradle jar

  Deployment:
    name: Deployment(Dev)
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build
      run: |
        gradle build
        
    - name: zip create
      run: zip ./SecuApp.zip ./*
      shell: bash

    - name: start deployment
      uses: bobheadxi/deployments@v0.6.2
      id: deployment
      with:
        step: start
        token: ${{ secrets.GITHUB_TOKEN }}
        env: Staging
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_S3_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_S3_SECRET_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Upload S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_KEY }}
      run: |
        aws s3 cp ./SecuApp.zip s3://secu-bucket/ --region ap-northeast-2
          
    - name: Deploy # Deploy to EC2
      id: staging
      run: aws deploy create-deployment --application-name SecuProject_DEV
            --deployment-config-name CodeDeployDefault.AllAtOnce
            --deployment-group-name Staging
            --s3-location "bucket"="secu-bucket","key"="SecuApp.zip","bundleType"="zip"

    - name: update deployment status
      uses: bobheadxi/deployments@v0.6.2
      if: always()
      with:
        step: finish
        token: ${{ secrets.GITHUB_TOKEN }}
        status: ${{ job.status }}
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}